apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "minikube-helm.fullname" . }}-api-deployment
  labels:
    {{- include "minikube-helm.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      {{- include "minikube-helm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "minikube-helm.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      initContainers:
        - name: migrator
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
            - name: DB_NAME
              {{- include "minikube-helm.env.db-name" . | nindent 14 }}
            - name: DB_USER
              {{- include "minikube-helm.env.db-user" . | nindent 14 }}
            - name: DB_PASSWORD
              {{- include "minikube-helm.env.db-password" . | nindent 14 }}
            - name: DB_HOST
              value: {{ include "minikube-helm.fullname" . }}-db-svc
            - name: DB_PORT
              value: "5432"
          command: ["python"]
          args: ["manage.py", "migrate"]
      containers:
        - name: main
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
            - name: DB_NAME
              {{- include "minikube-helm.env.db-name" . | nindent 14 }}
            - name: DB_USER
              {{- include "minikube-helm.env.db-user" . | nindent 14 }}
            - name: DB_PASSWORD
              {{- include "minikube-helm.env.db-password" . | nindent 14 }}
            - name: DB_HOST
              value: {{ include "minikube-helm.fullname" . }}-db-svc
            - name: DB_PORT
              value: "5432"
          command: ["python"]
          args: ["manage.py", "runserver", "0.0.0.0:8000"]
          ports:
            - name: http
              containerPort: 8000
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: {{ .Values.api.initialDelaySeconds }}
            failureThreshold: {{ .Values.api.failureThreshold }}
            periodSeconds: {{ .Values.api.periodSeconds }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
